单纯的，mid+1，mid-1就可以，我复杂化了输出
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int n=nums.size();
        int l=0;
        int r=n-1;
        int res;
        while(l<r)
        {
            int mid=(l+r)/2;
            if(target==nums[mid])
            {
                return mid;
                break;
            }
            if(target<nums[mid])
            {
                r=mid;
            }
            if(target>nums[mid])
            {
                l=mid+1;
            }
        }
        if(l==0&&target<nums[n-1])
        {
            res=0;
        }
        else if(target>nums[n-1])
        {
            res=l+1;
        }
        else
        {
            res=l;
        }
        return res;
    }
};
