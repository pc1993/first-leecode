 vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> hash;
        vector<int> result;
        for(int i=0;i<nums.size();i++)
        {
            int number=target-nums[i];
            if(hash.find(number)!=hash.end())
            {
                result.push_back(i);
                result.push_back(hash[number]);
                return result;
            }
            hash[nums[i]]=i;
        }
        return result;
    }
vector.push_back的用法，以及vector这一系列指令的用法




vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> result;
        for(int i=0;i<nums.size();i++)
        {
            for(int j=i+1;j<nums.size();j++)
            {
                if(nums[i]+nums[j]==target)
                {
                    result.push_back(i);
                    result.push_back(j);
                    return result;
                }
            }
        }
        return result;
    }
